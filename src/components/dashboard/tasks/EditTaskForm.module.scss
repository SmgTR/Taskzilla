.removeButton {
  background: $color-error;
}
.button {
  width: 30%;
  padding: $padding-vsmall;
  background: $color-popup-field;
  color: $color-text-dark;
  transition: all 200ms linear;
  &:hover {
    filter: saturate(1.2);
    background-color: $color-error;
    color: $color-light;
  }
}

.nameInput {
  width: 100%;
  border: none;
  outline: none;
  background: transparent;
  border-radius: $radius-small;
  padding: $padding-small-rem $padding-medium-rem;
  transition: background 200ms ease-in-out;

  &:hover,
  &:active,
  &:focus,
  &:focus-within {
    outline: 1px solid $color-accent;
    background: $color-popup-field;
  }
  margin-bottom: 0 !important;
}
.messageInput {
  height: 40%;
  width: 100%;
  border-radius: $radius-small;
  resize: none;
  border: none;
  color: $color-text-dark;
  padding: $padding-small-rem $padding-medium-rem;
  background: $color-popup-field;
  &:focus,
  &:focus-within {
    outline: 1px solid $color-accent;
  }
}
.nameLabel {
  display: none;
}
.formData {
  padding-left: $padding-medium-rem;
  @include flexLayout(flexEvenly);
  column-gap: 3rem;
  & > div {
    height: 100%;
    gap: 1rem;
    @include flexLayout(columnCenterVertical);
    flex-grow: 1;
    text-transform: uppercase;
  }
}
.assignedContainer {
  width: 30%;
}
.tagsContainer {
  width: 40%;
}
.tagsSelection {
  display: flex;
  align-items: center;
  column-gap: 3px;
  & > div {
    color: $color-primary--dark;
  }
}

.assignedTitle,
.tagsTitle,
.createdTitle,
.dueTitle {
  width: 100%;
  height: 50%;
  color: $color-text-dark;
}
.assignedPeople,
.tagsSelection,
.createdAt,
.dueAt {
  width: 100%;
  height: 100%;
  text-align: left;
  @include flexLayout(flexStart);
}

.person {
  height: 3rem;
  border-radius: 50%;
  background-color: $color-primary--light;
  color: $color-text-dark;
  width: 3rem;
  text-align: center;
  @include flexLayout(flexCenter);
  mix-blend-mode: hard-light;
}
@for $i from 1 through 3 {
  .person:nth-of-type(n + #{$i}) {
    filter: hue-rotate(80deg * $i);
    color: $color-light;
  }
}
.tagsSelection {
  mix-blend-mode: hard-light;
}
.tag {
  width: calc(100% / 3);
  text-align: center;
  border-radius: $radius-big;
  background: $color-primary--dark;
  padding: 0.5rem 1rem;
}
@for $i from 1 through 3 {
  .tag:nth-of-type(n + #{$i}) {
    filter: hue-rotate(80deg * $i);
    color: $color-light;
  }
}
.createdContainer {
  height: 50%;
  @include flexLayout(flexEnd);
  justify-content: flex-end !important;
}
.createdAt,
.createdTitle {
  color: $color-text-dark;
  text-align: end;
  filter: opacity(0.3);
}
.dueContainer {
  height: 30%;
  width: 100%;
}
.dueAt,
.dueTitle {
  color: $color-text-dark;
  text-align: end;
}
.dueContainer,
.createdContainer {
  width: 20%;
}
.dueAt {
  width: 100%;
  @include flexLayout(flexEnd);
}
